//
//  SearchRangeRouter.swift
//  AlboAeroTestSZ
//
//  Created by Sergio Eduardo Zorrilla Arellano on 07/06/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreLocation

protocol SearchRangeRouterInterface {
    func showAirports(coordinates: CLLocationCoordinate2D,
                      radiusKm: Int)
}

protocol SearchRangeDataPassing {
    var dataStore: SearchRangeDataStore? { get }
}

class SearchRangeRouter: SearchRangeRouterInterface, SearchRangeDataPassing {

    // MARK: - Properties
    
    weak var viewController: SearchRangeViewController?
    var dataStore: SearchRangeDataStore?

    func showAirports(coordinates: CLLocationCoordinate2D, radiusKm: Int) {
        let tabBarViewController = MainTabBarController.instantiate(storyboard: .main) ?? MainTabBarController()
        let mapViewController = tabBarViewController.viewControllers?.first as! MapAirportsViewController
        let listViewController = tabBarViewController.viewControllers?.last as! ListAirportsViewController
        tabBarViewController.modalPresentationStyle = .fullScreen

        guard var mapDataStore = mapViewController.router?.dataStore else {
            return
        }
        guard var listDataStore = listViewController.router?.dataStore else {
            return
        }
        self.passDataToMap(destination: &mapDataStore,
                           coordinates: coordinates,
                           radiusKm: radiusKm)
        self.passDataToList(destination: &listDataStore,
                            coordinates: coordinates,
                            radiusKm: radiusKm)
        self.viewController?.navigationController?.pushViewController(tabBarViewController, animated: true)
    }

    private func passDataToMap(destination: inout MapAirportsDataStore,
                               coordinates: CLLocationCoordinate2D,
                               radiusKm: Int) {
        destination.coordinates = coordinates
        destination.radiusKm = radiusKm
    }

    private func passDataToList(destination: inout ListAirportsDataStore,
                                coordinates: CLLocationCoordinate2D,
                                radiusKm: Int) {
        destination.coordinates = coordinates
        destination.radiusKm = radiusKm
    }
}
